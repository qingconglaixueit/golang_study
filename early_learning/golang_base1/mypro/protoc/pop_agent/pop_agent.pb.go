// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.13.0
// source: pop_agent.proto

package pop_agent

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

// 请求
type StreamMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CmdName string `protobuf:"bytes,1,opt,name=CmdName,proto3" json:"CmdName,omitempty"`
	Uuid    string `protobuf:"bytes,2,opt,name=Uuid,proto3" json:"Uuid,omitempty"`
	Code    string `protobuf:"bytes,3,opt,name=Code,proto3" json:"Code,omitempty"`
	Content string `protobuf:"bytes,4,opt,name=content,proto3" json:"content,omitempty"`
}

func (x *StreamMsg) Reset() {
	*x = StreamMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pop_agent_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StreamMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamMsg) ProtoMessage() {}

func (x *StreamMsg) ProtoReflect() protoreflect.Message {
	mi := &file_pop_agent_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamMsg.ProtoReflect.Descriptor instead.
func (*StreamMsg) Descriptor() ([]byte, []int) {
	return file_pop_agent_proto_rawDescGZIP(), []int{0}
}

func (x *StreamMsg) GetCmdName() string {
	if x != nil {
		return x.CmdName
	}
	return ""
}

func (x *StreamMsg) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *StreamMsg) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *StreamMsg) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

var File_pop_agent_proto protoreflect.FileDescriptor

var file_pop_agent_proto_rawDesc = []byte{
	0x0a, 0x0f, 0x70, 0x6f, 0x70, 0x5f, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x09, 0x70, 0x6f, 0x70, 0x5f, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x22, 0x67, 0x0a, 0x09,
	0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x4d, 0x73, 0x67, 0x12, 0x18, 0x0a, 0x07, 0x43, 0x6d, 0x64,
	0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x43, 0x6d, 0x64, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x55, 0x75, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x55, 0x75, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63,
	0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f,
	0x6e, 0x74, 0x65, 0x6e, 0x74, 0x32, 0x84, 0x01, 0x0a, 0x08, 0x50, 0x6f, 0x70, 0x41, 0x67, 0x65,
	0x6e, 0x74, 0x12, 0x3c, 0x0a, 0x08, 0x42, 0x69, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x12, 0x14,
	0x2e, 0x70, 0x6f, 0x70, 0x5f, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x53, 0x74, 0x72, 0x65, 0x61,
	0x6d, 0x4d, 0x73, 0x67, 0x1a, 0x14, 0x2e, 0x70, 0x6f, 0x70, 0x5f, 0x61, 0x67, 0x65, 0x6e, 0x74,
	0x2e, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x4d, 0x73, 0x67, 0x22, 0x00, 0x28, 0x01, 0x30, 0x01,
	0x12, 0x3a, 0x0a, 0x0a, 0x44, 0x55, 0x70, 0x4d, 0x73, 0x67, 0x53, 0x79, 0x6e, 0x63, 0x12, 0x14,
	0x2e, 0x70, 0x6f, 0x70, 0x5f, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x53, 0x74, 0x72, 0x65, 0x61,
	0x6d, 0x4d, 0x73, 0x67, 0x1a, 0x14, 0x2e, 0x70, 0x6f, 0x70, 0x5f, 0x61, 0x67, 0x65, 0x6e, 0x74,
	0x2e, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x4d, 0x73, 0x67, 0x22, 0x00, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_pop_agent_proto_rawDescOnce sync.Once
	file_pop_agent_proto_rawDescData = file_pop_agent_proto_rawDesc
)

func file_pop_agent_proto_rawDescGZIP() []byte {
	file_pop_agent_proto_rawDescOnce.Do(func() {
		file_pop_agent_proto_rawDescData = protoimpl.X.CompressGZIP(file_pop_agent_proto_rawDescData)
	})
	return file_pop_agent_proto_rawDescData
}

var file_pop_agent_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_pop_agent_proto_goTypes = []interface{}{
	(*StreamMsg)(nil), // 0: pop_agent.StreamMsg
}
var file_pop_agent_proto_depIdxs = []int32{
	0, // 0: pop_agent.PopAgent.BiStream:input_type -> pop_agent.StreamMsg
	0, // 1: pop_agent.PopAgent.DUpMsgSync:input_type -> pop_agent.StreamMsg
	0, // 2: pop_agent.PopAgent.BiStream:output_type -> pop_agent.StreamMsg
	0, // 3: pop_agent.PopAgent.DUpMsgSync:output_type -> pop_agent.StreamMsg
	2, // [2:4] is the sub-list for method output_type
	0, // [0:2] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_pop_agent_proto_init() }
func file_pop_agent_proto_init() {
	if File_pop_agent_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_pop_agent_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StreamMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_pop_agent_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_pop_agent_proto_goTypes,
		DependencyIndexes: file_pop_agent_proto_depIdxs,
		MessageInfos:      file_pop_agent_proto_msgTypes,
	}.Build()
	File_pop_agent_proto = out.File
	file_pop_agent_proto_rawDesc = nil
	file_pop_agent_proto_goTypes = nil
	file_pop_agent_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// PopAgentClient is the client API for PopAgent data_svr.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type PopAgentClient interface {
	// BiStream
	BiStream(ctx context.Context, opts ...grpc.CallOption) (PopAgent_BiStreamClient, error)
	DUpMsgSync(ctx context.Context, in *StreamMsg, opts ...grpc.CallOption) (*StreamMsg, error)
}

type popAgentClient struct {
	cc grpc.ClientConnInterface
}

func NewPopAgentClient(cc grpc.ClientConnInterface) PopAgentClient {
	return &popAgentClient{cc}
}

func (c *popAgentClient) BiStream(ctx context.Context, opts ...grpc.CallOption) (PopAgent_BiStreamClient, error) {
	stream, err := c.cc.NewStream(ctx, &_PopAgent_serviceDesc.Streams[0], "/pop_agent.PopAgent/BiStream", opts...)
	if err != nil {
		return nil, err
	}
	x := &popAgentBiStreamClient{stream}
	return x, nil
}

type PopAgent_BiStreamClient interface {
	Send(*StreamMsg) error
	Recv() (*StreamMsg, error)
	grpc.ClientStream
}

type popAgentBiStreamClient struct {
	grpc.ClientStream
}

func (x *popAgentBiStreamClient) Send(m *StreamMsg) error {
	return x.ClientStream.SendMsg(m)
}

func (x *popAgentBiStreamClient) Recv() (*StreamMsg, error) {
	m := new(StreamMsg)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *popAgentClient) DUpMsgSync(ctx context.Context, in *StreamMsg, opts ...grpc.CallOption) (*StreamMsg, error) {
	out := new(StreamMsg)
	err := c.cc.Invoke(ctx, "/pop_agent.PopAgent/DUpMsgSync", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// PopAgentServer is the server API for PopAgent data_svr.
type PopAgentServer interface {
	// BiStream
	BiStream(PopAgent_BiStreamServer) error
	DUpMsgSync(context.Context, *StreamMsg) (*StreamMsg, error)
}

// UnimplementedPopAgentServer can be embedded to have forward compatible implementations.
type UnimplementedPopAgentServer struct {
}

func (*UnimplementedPopAgentServer) BiStream(PopAgent_BiStreamServer) error {
	return status.Errorf(codes.Unimplemented, "method BiStream not implemented")
}
func (*UnimplementedPopAgentServer) DUpMsgSync(context.Context, *StreamMsg) (*StreamMsg, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DUpMsgSync not implemented")
}

func RegisterPopAgentServer(s *grpc.Server, srv PopAgentServer) {
	s.RegisterService(&_PopAgent_serviceDesc, srv)
}

func _PopAgent_BiStream_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(PopAgentServer).BiStream(&popAgentBiStreamServer{stream})
}

type PopAgent_BiStreamServer interface {
	Send(*StreamMsg) error
	Recv() (*StreamMsg, error)
	grpc.ServerStream
}

type popAgentBiStreamServer struct {
	grpc.ServerStream
}

func (x *popAgentBiStreamServer) Send(m *StreamMsg) error {
	return x.ServerStream.SendMsg(m)
}

func (x *popAgentBiStreamServer) Recv() (*StreamMsg, error) {
	m := new(StreamMsg)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func _PopAgent_DUpMsgSync_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(StreamMsg)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PopAgentServer).DUpMsgSync(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pop_agent.PopAgent/DUpMsgSync",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PopAgentServer).DUpMsgSync(ctx, req.(*StreamMsg))
	}
	return interceptor(ctx, in, info, handler)
}

var _PopAgent_serviceDesc = grpc.ServiceDesc{
	ServiceName: "pop_agent.PopAgent",
	HandlerType: (*PopAgentServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "DUpMsgSync",
			Handler:    _PopAgent_DUpMsgSync_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "BiStream",
			Handler:       _PopAgent_BiStream_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
	},
	Metadata: "pop_agent.proto",
}
